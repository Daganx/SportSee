{"ast":null,"code":"// src/services/api.js\nimport axios from \"axios\";\nimport { USER_MAIN_DATA, USER_ACTIVITY, USER_AVERAGE_SESSIONS, USER_PERFORMANCE } from \"./mockData.js\"; // Assurez-vous du chemin correct\n\nconst baseUrl = \"http://localhost:3000\"; // Remplacez par l'URL de votre API si nécessaire\n\nconst getUserData = async userId => {\n  try {\n    // Simuler une requête GET pour récupérer les données de l'utilisateur\n    const response = await axios.get(`${baseUrl}/user/${userId}`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching user data:\", error);\n    throw error; // Vous pouvez gérer les erreurs selon vos besoins\n  }\n};\nconst getUserActivity = async userId => {\n  try {\n    // Simuler une requête GET pour récupérer l'activité de l'utilisateur\n    const response = await axios.get(`${baseUrl}/users/${userId}/activity`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching user activity:\", error);\n    throw error;\n  }\n};\nconst getUserAverageSessions = async userId => {\n  try {\n    // Simuler une requête GET pour récupérer les sessions moyennes de l'utilisateur\n    const response = await axios.get(`${baseUrl}/users/${userId}/average-sessions`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching average sessions:\", error);\n    throw error;\n  }\n};\nconst getUserPerformance = async userId => {\n  try {\n    // Simuler une requête GET pour récupérer les performances de l'utilisateur\n    const response = await axios.get(`${baseUrl}/users/${userId}/performance`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching user performance:\", error);\n    throw error;\n  }\n};\nexport { getUserData, getUserActivity, getUserAverageSessions, getUserPerformance };","map":{"version":3,"names":["axios","USER_MAIN_DATA","USER_ACTIVITY","USER_AVERAGE_SESSIONS","USER_PERFORMANCE","baseUrl","getUserData","userId","response","get","data","error","console","getUserActivity","getUserAverageSessions","getUserPerformance"],"sources":["/Users/macbook/Documents/OpenClassRooms/Projet_12_Letot_Dagan/sportsee-front/src/services/api.js"],"sourcesContent":["// src/services/api.js\nimport axios from \"axios\";\nimport { USER_MAIN_DATA, USER_ACTIVITY, USER_AVERAGE_SESSIONS, USER_PERFORMANCE } from \"./mockData.js\"; // Assurez-vous du chemin correct\n\nconst baseUrl = \"http://localhost:3000\"; // Remplacez par l'URL de votre API si nécessaire\n\nconst getUserData = async (userId) => {\n  try {\n    // Simuler une requête GET pour récupérer les données de l'utilisateur\n    const response = await axios.get(`${baseUrl}/user/${userId}`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching user data:\", error);\n    throw error; // Vous pouvez gérer les erreurs selon vos besoins\n  }\n};\n\nconst getUserActivity = async (userId) => {\n  try {\n    // Simuler une requête GET pour récupérer l'activité de l'utilisateur\n    const response = await axios.get(`${baseUrl}/users/${userId}/activity`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching user activity:\", error);\n    throw error;\n  }\n};\n\nconst getUserAverageSessions = async (userId) => {\n  try {\n    // Simuler une requête GET pour récupérer les sessions moyennes de l'utilisateur\n    const response = await axios.get(`${baseUrl}/users/${userId}/average-sessions`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching average sessions:\", error);\n    throw error;\n  }\n};\n\nconst getUserPerformance = async (userId) => {\n  try {\n    // Simuler une requête GET pour récupérer les performances de l'utilisateur\n    const response = await axios.get(`${baseUrl}/users/${userId}/performance`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching user performance:\", error);\n    throw error;\n  }\n};\n\nexport { getUserData, getUserActivity, getUserAverageSessions, getUserPerformance };\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,EAAEC,aAAa,EAAEC,qBAAqB,EAAEC,gBAAgB,QAAQ,eAAe,CAAC,CAAC;;AAExG,MAAMC,OAAO,GAAG,uBAAuB,CAAC,CAAC;;AAEzC,MAAMC,WAAW,GAAG,MAAOC,MAAM,IAAK;EACpC,IAAI;IACF;IACA,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,GAAGJ,OAAO,SAASE,MAAM,EAAE,CAAC;IAC7D,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACjD,MAAMA,KAAK,CAAC,CAAC;EACf;AACF,CAAC;AAED,MAAME,eAAe,GAAG,MAAON,MAAM,IAAK;EACxC,IAAI;IACF;IACA,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,GAAGJ,OAAO,UAAUE,MAAM,WAAW,CAAC;IACvE,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACrD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,MAAMG,sBAAsB,GAAG,MAAOP,MAAM,IAAK;EAC/C,IAAI;IACF;IACA,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,GAAGJ,OAAO,UAAUE,MAAM,mBAAmB,CAAC;IAC/E,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IACxD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,MAAMI,kBAAkB,GAAG,MAAOR,MAAM,IAAK;EAC3C,IAAI;IACF;IACA,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,GAAGJ,OAAO,UAAUE,MAAM,cAAc,CAAC;IAC1E,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IACxD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,SAASL,WAAW,EAAEO,eAAe,EAAEC,sBAAsB,EAAEC,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}