{"ast":null,"code":"import { USER_MAIN_DATA, USER_ACTIVITY, USER_AVERAGE_SESSIONS, USER_PERFORMANCE } from \"./mockData.js\";\nconst getUserData = userId => {\n  return new Promise((resolve, reject) => {\n    const user = USER_MAIN_DATA.find(user => user.id === parseInt(userId));\n    if (user) {\n      resolve(user);\n    } else {\n      reject(\"User not found\");\n    }\n  });\n};\nconst getUserActivity = userId => {\n  return new Promise((resolve, reject) => {\n    const activity = USER_ACTIVITY.find(activity => activity.userId === parseInt(userId));\n    if (activity) {\n      resolve(activity);\n    } else {\n      reject(\"Activity not found\");\n    }\n  });\n};\nconst getUserAverageSessions = userId => {\n  return new Promise((resolve, reject) => {\n    const sessions = USER_AVERAGE_SESSIONS.find(session => session.userId === parseInt(userId));\n    if (sessions) {\n      resolve(sessions);\n    } else {\n      reject(\"Sessions not found\");\n    }\n  });\n};\nconst getUserPerformance = userId => {\n  return new Promise((resolve, reject) => {\n    const performance = USER_PERFORMANCE.find(performance => performance.userId === parseInt(userId));\n    if (performance) {\n      resolve(performance);\n    } else {\n      reject(\"Performance not found\");\n    }\n  });\n};\nexport { getUserData, getUserActivity, getUserAverageSessions, getUserPerformance };","map":{"version":3,"names":["USER_MAIN_DATA","USER_ACTIVITY","USER_AVERAGE_SESSIONS","USER_PERFORMANCE","getUserData","userId","Promise","resolve","reject","user","find","id","parseInt","getUserActivity","activity","getUserAverageSessions","sessions","session","getUserPerformance","performance"],"sources":["/Users/macosmonterey/Documents/OpenClassRooms/Projet_12_Letot_Dagan/SportSee/sportsee-front/src/services/api.js"],"sourcesContent":["import {\n  USER_MAIN_DATA,\n  USER_ACTIVITY,\n  USER_AVERAGE_SESSIONS,\n  USER_PERFORMANCE,\n} from \"./mockData.js\";\n\nconst getUserData = (userId) => {\n  return new Promise((resolve, reject) => {\n    const user = USER_MAIN_DATA.find((user) => user.id === parseInt(userId));\n    if (user) {\n      resolve(user);\n    } else {\n      reject(\"User not found\");\n    }\n  });\n};\n\nconst getUserActivity = (userId) => {\n  return new Promise((resolve, reject) => {\n    const activity = USER_ACTIVITY.find(\n      (activity) => activity.userId === parseInt(userId)\n    );\n    if (activity) {\n      resolve(activity);\n    } else {\n      reject(\"Activity not found\");\n    }\n  });\n};\n\nconst getUserAverageSessions = (userId) => {\n  return new Promise((resolve, reject) => {\n    const sessions = USER_AVERAGE_SESSIONS.find(\n      (session) => session.userId === parseInt(userId)\n    );\n    if (sessions) {\n      resolve(sessions);\n    } else {\n      reject(\"Sessions not found\");\n    }\n  });\n};\n\nconst getUserPerformance = (userId) => {\n  return new Promise((resolve, reject) => {\n    const performance = USER_PERFORMANCE.find(\n      (performance) => performance.userId === parseInt(userId)\n    );\n    if (performance) {\n      resolve(performance);\n    } else {\n      reject(\"Performance not found\");\n    }\n  });\n};\n\nexport {\n  getUserData,\n  getUserActivity,\n  getUserAverageSessions,\n  getUserPerformance,\n};\n"],"mappings":"AAAA,SACEA,cAAc,EACdC,aAAa,EACbC,qBAAqB,EACrBC,gBAAgB,QACX,eAAe;AAEtB,MAAMC,WAAW,GAAIC,MAAM,IAAK;EAC9B,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACtC,MAAMC,IAAI,GAAGT,cAAc,CAACU,IAAI,CAAED,IAAI,IAAKA,IAAI,CAACE,EAAE,KAAKC,QAAQ,CAACP,MAAM,CAAC,CAAC;IACxE,IAAII,IAAI,EAAE;MACRF,OAAO,CAACE,IAAI,CAAC;IACf,CAAC,MAAM;MACLD,MAAM,CAAC,gBAAgB,CAAC;IAC1B;EACF,CAAC,CAAC;AACJ,CAAC;AAED,MAAMK,eAAe,GAAIR,MAAM,IAAK;EAClC,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACtC,MAAMM,QAAQ,GAAGb,aAAa,CAACS,IAAI,CAChCI,QAAQ,IAAKA,QAAQ,CAACT,MAAM,KAAKO,QAAQ,CAACP,MAAM,CACnD,CAAC;IACD,IAAIS,QAAQ,EAAE;MACZP,OAAO,CAACO,QAAQ,CAAC;IACnB,CAAC,MAAM;MACLN,MAAM,CAAC,oBAAoB,CAAC;IAC9B;EACF,CAAC,CAAC;AACJ,CAAC;AAED,MAAMO,sBAAsB,GAAIV,MAAM,IAAK;EACzC,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACtC,MAAMQ,QAAQ,GAAGd,qBAAqB,CAACQ,IAAI,CACxCO,OAAO,IAAKA,OAAO,CAACZ,MAAM,KAAKO,QAAQ,CAACP,MAAM,CACjD,CAAC;IACD,IAAIW,QAAQ,EAAE;MACZT,OAAO,CAACS,QAAQ,CAAC;IACnB,CAAC,MAAM;MACLR,MAAM,CAAC,oBAAoB,CAAC;IAC9B;EACF,CAAC,CAAC;AACJ,CAAC;AAED,MAAMU,kBAAkB,GAAIb,MAAM,IAAK;EACrC,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACtC,MAAMW,WAAW,GAAGhB,gBAAgB,CAACO,IAAI,CACtCS,WAAW,IAAKA,WAAW,CAACd,MAAM,KAAKO,QAAQ,CAACP,MAAM,CACzD,CAAC;IACD,IAAIc,WAAW,EAAE;MACfZ,OAAO,CAACY,WAAW,CAAC;IACtB,CAAC,MAAM;MACLX,MAAM,CAAC,uBAAuB,CAAC;IACjC;EACF,CAAC,CAAC;AACJ,CAAC;AAED,SACEJ,WAAW,EACXS,eAAe,EACfE,sBAAsB,EACtBG,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}