{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Documents/OpenClassRooms/Projet_12/SportSee/sportsee-front/src/components/BarChart/BarChart.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, ResponsiveContainer, CartesianGrid, Legend } from \"recharts\";\nimport \"../BarChart/barChart.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst invalidData = [{\n  day: \"Lundi\",\n  kilogram: 70\n},\n// Missing 'calories'\n{\n  day: \"Mardi\",\n  kilogram: \"71\",\n  calories: 310\n} // 'kilogram' should be a number\n// Autres données invalides...\n];\n/*#__PURE__*/_jsxDEV(BarChartComponent, {\n  data: invalidData\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 21,\n  columnNumber: 1\n}, this);\nconst tickFormatter = (value, index) => {\n  return index + 1;\n};\nconst CustomTooltip = ({\n  active,\n  payload\n}) => {\n  if (active && payload && payload.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.tooltipContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        style: styles.label,\n        children: `${payload[0].value} kg`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: styles.label,\n        children: `${payload[1].value} Kcal`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n  return null;\n};\n_c = CustomTooltip;\nconst styles = {\n  tooltipContainer: {\n    backgroundColor: \"red\",\n    padding: \"15px 5px\",\n    color: \"white\",\n    fontSize: \"10px\"\n  },\n  label: {\n    margin: 0\n  }\n};\nBarChartComponent.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    day: PropTypes.string.isRequired,\n    kilogram: PropTypes.number.isRequired,\n    calories: PropTypes.number.isRequired\n  })).isRequired\n};\nexport default BarChartComponent;\nvar _c;\n$RefreshReg$(_c, \"CustomTooltip\");","map":{"version":3,"names":["React","PropTypes","BarChart","Bar","XAxis","YAxis","Tooltip","ResponsiveContainer","CartesianGrid","Legend","jsxDEV","_jsxDEV","invalidData","day","kilogram","calories","BarChartComponent","data","fileName","_jsxFileName","lineNumber","columnNumber","tickFormatter","value","index","CustomTooltip","active","payload","length","style","styles","tooltipContainer","children","label","_c","backgroundColor","padding","color","fontSize","margin","propTypes","arrayOf","shape","string","isRequired","number","$RefreshReg$"],"sources":["/Users/macbook/Documents/OpenClassRooms/Projet_12/SportSee/sportsee-front/src/components/BarChart/BarChart.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  Tooltip,\n  ResponsiveContainer,\n  CartesianGrid,\n  Legend,\n} from \"recharts\";\nimport \"../BarChart/barChart.css\";\n\nconst invalidData = [\n  { day: \"Lundi\", kilogram: 70 }, // Missing 'calories'\n  { day: \"Mardi\", kilogram: \"71\", calories: 310 }, // 'kilogram' should be a number\n  // Autres données invalides...\n];\n\n<BarChartComponent data={invalidData} />;\n\nconst tickFormatter = (value, index) => {\n  return index + 1;\n};\n\nconst CustomTooltip = ({ active, payload }) => {\n  if (active && payload && payload.length) {\n    return (\n      <div style={styles.tooltipContainer}>\n        <p style={styles.label}>{`${payload[0].value} kg`}</p>\n        <p style={styles.label}>{`${payload[1].value} Kcal`}</p>\n      </div>\n    );\n  }\n\n  return null;\n};\n\nconst styles = {\n  tooltipContainer: {\n    backgroundColor: \"red\",\n    padding: \"15px 5px\",\n    color: \"white\",\n    fontSize: \"10px\",\n  },\n  label: {\n    margin: 0,\n  },\n};\n\n\n\nBarChartComponent.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      day: PropTypes.string.isRequired,\n      kilogram: PropTypes.number.isRequired,\n      calories: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default BarChartComponent;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,SACEC,QAAQ,EACRC,GAAG,EACHC,KAAK,EACLC,KAAK,EACLC,OAAO,EACPC,mBAAmB,EACnBC,aAAa,EACbC,MAAM,QACD,UAAU;AACjB,OAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,WAAW,GAAG,CAClB;EAAEC,GAAG,EAAE,OAAO;EAAEC,QAAQ,EAAE;AAAG,CAAC;AAAE;AAChC;EAAED,GAAG,EAAE,OAAO;EAAEC,QAAQ,EAAE,IAAI;EAAEC,QAAQ,EAAE;AAAI,CAAC,CAAE;AACjD;AAAA,CACD;AAED,aAAAJ,OAAA,CAACK,iBAAiB;EAACC,IAAI,EAAEL;AAAY;EAAAM,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAE,CAAC;AAExC,MAAMC,aAAa,GAAGA,CAACC,KAAK,EAAEC,KAAK,KAAK;EACtC,OAAOA,KAAK,GAAG,CAAC;AAClB,CAAC;AAED,MAAMC,aAAa,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAQ,CAAC,KAAK;EAC7C,IAAID,MAAM,IAAIC,OAAO,IAAIA,OAAO,CAACC,MAAM,EAAE;IACvC,oBACEjB,OAAA;MAAKkB,KAAK,EAAEC,MAAM,CAACC,gBAAiB;MAAAC,QAAA,gBAClCrB,OAAA;QAAGkB,KAAK,EAAEC,MAAM,CAACG,KAAM;QAAAD,QAAA,EAAE,GAAGL,OAAO,CAAC,CAAC,CAAC,CAACJ,KAAK;MAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtDV,OAAA;QAAGkB,KAAK,EAAEC,MAAM,CAACG,KAAM;QAAAD,QAAA,EAAE,GAAGL,OAAO,CAAC,CAAC,CAAC,CAACJ,KAAK;MAAO;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrD,CAAC;EAEV;EAEA,OAAO,IAAI;AACb,CAAC;AAACa,EAAA,GAXIT,aAAa;AAanB,MAAMK,MAAM,GAAG;EACbC,gBAAgB,EAAE;IAChBI,eAAe,EAAE,KAAK;IACtBC,OAAO,EAAE,UAAU;IACnBC,KAAK,EAAE,OAAO;IACdC,QAAQ,EAAE;EACZ,CAAC;EACDL,KAAK,EAAE;IACLM,MAAM,EAAE;EACV;AACF,CAAC;AAIDvB,iBAAiB,CAACwB,SAAS,GAAG;EAC5BvB,IAAI,EAAEhB,SAAS,CAACwC,OAAO,CACrBxC,SAAS,CAACyC,KAAK,CAAC;IACd7B,GAAG,EAAEZ,SAAS,CAAC0C,MAAM,CAACC,UAAU;IAChC9B,QAAQ,EAAEb,SAAS,CAAC4C,MAAM,CAACD,UAAU;IACrC7B,QAAQ,EAAEd,SAAS,CAAC4C,MAAM,CAACD;EAC7B,CAAC,CACH,CAAC,CAACA;AACJ,CAAC;AAED,eAAe5B,iBAAiB;AAAC,IAAAkB,EAAA;AAAAY,YAAA,CAAAZ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}